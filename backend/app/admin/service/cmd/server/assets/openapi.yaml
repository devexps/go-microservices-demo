# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: GoMicro Admin - OpenAPI 3.0
    description: GoMicro Admin API
    contact:
        name: devexps
        url: https://github.com/devexps/go-swagger-ui
        email: dev.experiences@gmail.com
    license:
        name: MIT License
        url: https://github.com/devexps/go-swagger-ui/blob/master/LICENSE
    version: "1.0"
paths:
    /admin/v1/login:
        post:
            tags:
                - AuthenticationService
            description: Login
            operationId: AuthenticationService_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
    /admin/v1/logout:
        post:
            tags:
                - AuthenticationService
            description: Logout
            operationId: AuthenticationService_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/me:
        get:
            tags:
                - AuthenticationService
            description: GetMe
            operationId: AuthenticationService_GetMe
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/refresh_token:
        post:
            tags:
                - AuthenticationService
            description: RefreshToken
            operationId: AuthenticationService_RefreshToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RefreshTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RefreshTokenResponse'
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/users:
        get:
            tags:
                - UserService
            description: ListUser
            operationId: UserService_ListUser
            parameters:
                - name: page
                  in: query
                  description: page
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: pageSize
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: query
                  schema:
                    type: string
                - name: or
                  in: query
                  description: orQuery
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: orderBy
                  schema:
                    type: array
                    items:
                        type: string
                - name: nopaging
                  in: query
                  description: noPaging
                  schema:
                    type: boolean
                - name: field_mask
                  in: query
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserResponse'
            security:
                - OAuth2PasswordBearer: []
        post:
            tags:
                - UserService
            description: CreateUser
            operationId: UserService_CreateUser
            parameters:
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: password
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/users/{id}:
        get:
            tags:
                - UserService
            description: GetUser
            operationId: UserService_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
            security:
                - OAuth2PasswordBearer: []
        delete:
            tags:
                - UserService
            description: DeleteUser
            operationId: UserService_DeleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
            security:
                - OAuth2PasswordBearer: []
    /admin/v1/users/{user.id}:
        put:
            tags:
                - UserService
            description: UpdateUser
            operationId: UserService_UpdateUser
            parameters:
                - name: user.id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: password
                  in: query
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
            security:
                - OAuth2PasswordBearer: []
components:
    schemas:
        GoMicroStatus:
            type: object
            properties:
                code:
                    type: number
                    description: Code
                    format: int32
                message:
                    type: string
                    description: Message
                reason:
                    type: string
                    description: Reason
                metadata:
                    type: object
                    description: Metadata
            description: GoMicro error return
        ListUserResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
                total:
                    type: integer
                    format: int32
            description: ListUserResponse
        LoginRequest:
            required:
                - username
                - password
                - grand_type
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                grand_type:
                    type: string
                    default: password
                    description: Authorization type, the value here is fixed to "password", required.
                scope:
                    type: string
            description: LoginRequest
        LoginResponse:
            type: object
            properties:
                access_token:
                    type: string
                refresh_token:
                    type: string
                grand_type:
                    type: string
                expires_in:
                    type: string
            description: LoginResponse
        LogoutRequest:
            required:
                - id
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
            description: LogoutRequest
        RefreshTokenRequest:
            required:
                - refreshToken
                - grandType
            type: object
            properties:
                refreshToken:
                    type: string
                grandType:
                    type: string
                    default: password
                    description: Authorization type, the value here is fixed to "password", required.
                scope:
                    type: string
            description: RefreshTokenRequest
        RefreshTokenResponse:
            type: object
            properties:
                accessToken:
                    type: string
                refreshToken:
                    type: string
                grandType:
                    type: string
                expiresIn:
                    type: string
            description: RefreshTokenResponse
        User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                creatorId:
                    type: integer
                    description: CreatorID
                    format: uint32
                userName:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                    description: Real Name
                avatar:
                    type: string
                    description: Avatar
                email:
                    type: string
                    description: Email
                phone:
                    type: string
                    description: Phone
                gender:
                    type: string
                    description: Gender
                address:
                    type: string
                    description: Address
                description:
                    type: string
                lastLoginTime:
                    type: string
                    description: Last login time
                lastLoginIp:
                    type: string
                    description: Last login IP
                status:
                    enum:
                        - ON
                        - OFF
                    type: string
                    default: ON
                    description: Status
                authority:
                    enum:
                        - SYS_ADMIN
                        - CUSTOMER_USER
                        - GUEST_USER
                        - REFRESH_TOKEN
                    type: string
                    default: CUSTOMER_USER
                    description: Authority
                    format: enum
                createTime:
                    type: string
                updateTime:
                    type: string
                deleteTime:
                    type: string
            description: User
    responses:
        default:
            description: Default GoMicro response
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/GoMicroStatus'
    securitySchemes:
        OAuth2PasswordBearer:
            type: oauth2
            flows:
                password:
                    tokenUrl: /admin/v1/login
                    refreshUrl: /admin/v1/refresh_token
                    scopes: {}
tags:
    - name: AuthenticationService
      description: AuthenticationService
    - name: UserService
      description: UserService
